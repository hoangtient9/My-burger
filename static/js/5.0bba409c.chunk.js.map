{"version":3,"sources":["components/Order/Order.module.scss","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","React","memo","props","ingredients","key","push","name","amount","ingredientsOut","map","ingredient","style","textTransform","display","margin","border","padding","className","classes","Number","parseFloat","price","toFixed","Orders","dispatch","useDispatch","onFetchOrders","useCallback","token","userId","actions","ordersData","useSelector","state","order","orders","loading","auth","useEffect","Spinner","totalPrice","id","console","log","withErrorHandler","axios"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,sFCgCXC,EA9BDC,IAAMC,MAAK,SAAAC,GACrB,IAAMC,EAAc,GACpB,IAAI,IAAIC,KAAOF,EAAMC,YACjBA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAGlC,IAAMI,EAAiBL,EAAYM,KAAI,SAAAC,GAAU,OAC7C,0BACIN,IAAKM,EAAWJ,KAChBK,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,QAEZN,EAAWJ,KAThB,IASuBI,EAAWH,OATlC,QAaJ,OACI,yBAAKU,UAAWC,IAAQnB,OACpB,2CAAiBS,GACjB,qCAAU,uCAAaW,OAAOC,WAAWlB,EAAMmB,OAAOC,QAAQ,S,+BCnBpEC,EAASvB,IAAMC,MAAK,SAAAC,GAEtB,IAAMsB,EAAWC,cACXC,EAAgBC,uBAAY,SAACC,EAAOC,GAAR,OAAmBL,EAASM,IAAoBF,EAAOC,MAAU,CAACL,IAE9FO,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,UAC9CC,EAAUJ,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAME,WAC3CR,EAAQI,aAAY,SAAAC,GAAK,OAAIA,EAAMI,KAAKT,SACxCC,EAASG,aAAY,SAAAC,GAAK,OAAIA,EAAMI,KAAKR,UAE/CS,qBAAU,WACNZ,EAAcE,EAAOC,KACtB,CAACH,EAAeE,EAAOC,IAE1B,IAAIM,EAAS,kBAACI,EAAA,EAAD,MAKb,OAJKH,IACDD,EAASJ,EAAWtB,KAAI,SAAAyB,GAAK,OAAI,kBAAC,EAAD,CAAO/B,YAAa+B,EAAM/B,YAAakB,MAAOa,EAAMM,WAAYpC,IAAK8B,EAAMO,SAEhHC,QAAQC,IAAI,oBAER,6BACKR,MAKES,sBAAiBrB,EAAQsB","file":"static/js/5.0bba409c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2h_0X\"};","import React from 'react';\r\nimport classes from './Order.module.scss'\r\n\r\nconst Order = React.memo(props => {\r\n    const ingredients = []\r\n    for(let key in props.ingredients) {\r\n        ingredients.push({\r\n            name: key,\r\n            amount: props.ingredients[key]\r\n        })\r\n    }\r\n    const ingredientsOut = ingredients.map(ingredient => (\r\n        <span \r\n            key={ingredient.name}\r\n            style={{\r\n                textTransform: \"capitalize\",\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}>\r\n            {ingredient.name}({ingredient.amount})\r\n        </span>\r\n    ))\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientsOut}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Order;","import React, {useEffect, useCallback} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nconst Orders = React.memo(props => {\r\n\r\n    const dispatch = useDispatch();\r\n    const onFetchOrders = useCallback((token, userId) => dispatch(actions.fetchOrders(token, userId)), [dispatch]);\r\n\r\n    const ordersData = useSelector(state => state.order.orders);\r\n    const loading = useSelector(state => state.order.loading);\r\n    const token = useSelector(state => state.auth.token);\r\n    const userId = useSelector(state => state.auth.userId);\r\n\r\n    useEffect(() => {\r\n        onFetchOrders(token, userId);\r\n    }, [onFetchOrders, token, userId])\r\n\r\n    let orders = <Spinner />;\r\n    if (!loading) {\r\n        orders = ordersData.map(order => <Order ingredients={order.ingredients} price={order.totalPrice} key={order.id} />)\r\n    }\r\n    console.log('Orders rendering')\r\n    return (\r\n        <div>\r\n            {orders}\r\n        </div>  \r\n    )\r\n})\r\n\r\nexport default withErrorHandler(Orders, axios);"],"sourceRoot":""}